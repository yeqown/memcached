name: Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: [amd64]
        include:
          - os: linux
            arch: arm64
          - os: darwin
            arch: arm64
        exclude:
          - os: windows
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Determine build parameters
        id: build-params
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            echo "binary=memcached-cli.exe" >> $GITHUB_OUTPUT
            echo "extension=.exe" >> $GITHUB_OUTPUT
          else
            echo "binary=memcached-cli" >> $GITHUB_OUTPUT
            echo "extension=" >> $GITHUB_OUTPUT
          fi
          
          echo "archive=memcached-cli-${{ matrix.os }}-${{ matrix.arch }}${{ steps.build-params.outputs.extension }}" >> $GITHUB_OUTPUT

      - name: Build binary
        run: |
          cd ./cmd/memcached-cli
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -ldflags="-s -w -X main.version=${{ github.ref_name }}" -o ${{ steps.build-params.outputs.binary }}
          cd - 
          mkdir -p release
          if [ "${{ matrix.os }}" = "windows" ]; then
            cp ./cmd/memcached-cli/${{ steps.build-params.outputs.binary }} ./release/${{ steps.build-params.outputs.archive }}
          else
            cp ./cmd/memcached-cli/${{ steps.build-params.outputs.binary }} ./release/${{ steps.build-params.outputs.archive }}
            chmod +x ./release/${{ steps.build-params.outputs.archive }}
          fi

      - name: Upload binary to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./release/${{ steps.build-params.outputs.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}